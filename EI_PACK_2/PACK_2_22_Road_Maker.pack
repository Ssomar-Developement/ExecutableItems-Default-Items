name: '&fRoad Maker'
lore:
- '&7&oItems from EI-PACKS 2 (9.99 euros)'
- '&7&oYou can purchase it on discord (Special70)'
- ''
- '&7Allows you to create 5x5 roads'
- '&7with materials from your inv by'
- '&7clicking the ground'
- '&f'
- '&7Shift-Right-Click to select'
- '&7what options you want to'
- '&7select and Shift-Left-Click'
- '&7to assign the material. Put'
- '&7the chosen block in your offhand'
- '&f'
- '&7%var_selector01%: &f%var_center1%'
- '&7%var_selector02%: &f%var_border1%'
- '&cThis pickaxe consumes the materials'
- '&cassigned in this pickaxe so do not'
- '&cuse non-block material or it will be wasted'
material: GOLDEN_PICKAXE
glow: false
disableStack: false
keepItemOnDeath: false
canBeUsedOnlyByTheOwner: false
storeItemInfo: false
unbreakable: true
usage: 0
usageLimit: -1
durability: 32
dropOptions:
  glowDrop: false
  glowDropColor: WHITE
  displayNameDrop: false
hiders:
  hideEnchantments: false
  hideUnbreakable: true
  hideAttributes: true
  hidePotionEffects: false
  hideUsage: true
enchantments: {}
giveFirstJoin:
  giveFirstJoin: false
  giveFirstJoinAmount: 1
  giveFirstJoinSlot: 0
restrictions: {}
cancelEventIfNoPerm: false
cancelEventIfNotOwner: false
disabledWorlds: []
variables:
  border1_id:
    variableName: border1_id
    type: STRING
    default: stone_bricks
  antispam:
    variableName: antispam
    type: STRING
    default: '0'
  border1:
    variableName: border1
    type: STRING
    default: §fSTONE_BRICKS
  selector01:
    variableName: selector01
    type: STRING
    default: '>> Center'
  x:
    variableName: x
    type: NUMBER
    default: 0.0
  selector02:
    variableName: selector02
    type: STRING
    default: Border
  y:
    variableName: y
    type: NUMBER
    default: 0.0
  center1:
    variableName: center1
    type: STRING
    default: §fSTONE
  z:
    variableName: z
    type: NUMBER
    default: 0.0
  center1_id:
    variableName: center1_id
    type: STRING
    default: stone
activators:
  activator1:
    name: '&eActivator'
    option: PLAYER_LEFT_CLICK
    typeTarget: ONLY_BLOCK
    usageModification: 0
    cancelEvent: true
    silenceOutput: false
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems:
      errorMessage: ''
    requiredExecutableItems:
      errorMessage: ''
    detailedSlots:
    - -1
    commands: []
    playerConditions: {}
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions: {}
    detailedBlocks:
      blocks: []
      cancelEventIfNotValid: false
      messageIfNotValid: ''
    blockCommands:
    - MINEINCUBE 2
    blockConditions: {}
    variablesModification:
      varModif2:
        variableName: z
        type: SET
        modification: '%block_z%'
      varModif1:
        variableName: y
        type: SET
        modification: '%block_y%'
      varModif0:
        variableName: x
        type: SET
        modification: '%block_x%'
  activator0:
    name: '&eActivator'
    option: PLAYER_BLOCK_BREAK
    usageModification: 0
    cancelEvent: true
    silenceOutput: false
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems:
      errorMessage: ''
    requiredExecutableItems:
      errorMessage: ''
    detailedSlots:
    - -1
    commands: []
    playerConditions: {}
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions: {}
    detailedBlocks:
      blocks: []
      cancelEventIfNotValid: false
      messageIfNotValid: ''
    blockCommands: []
    blockConditions:
      blockAroundCdts:
        aBC3:
          southValue: 0
          northValue: 0
          westValue: 0
          eastValue: 0
          aboveValue: 1
          underValue: 0
          errorMsg: §e
          blockMustBeExecutableBlock: []
          blockTypeMustBe: {}
          blockTypeMustNotBe: {}
    variablesModification: {}
  center1:
    name: '&eActivator'
    option: PLAYER_BLOCK_BREAK
    usageModification: 0
    cancelEvent: false
    silenceOutput: false
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems:
      errorMessage: ''
    requiredExecutableItems:
      errorMessage: ''
    detailedSlots:
    - -1
    commands:
    - execute at %player% run setblock %block_x_int% %block_y_int% %block_z_int% air
      destroy
    - papi parse %player% %checkitem_remove_mat:%var_center1_id%,amt:1,strict%
    - DELAYTICK 1
    - execute at %player% run setblock %block_x_int% %block_y_int% %block_z_int% %var_center1_id%
    playerConditions: {}
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions:
      plchC1:
        type: PLAYER_NUMBER
        comparator: INFERIOR
        part1: '%math_0_ABS((%block_x%)-(%var_x%))%'
        part2: '2.0'
        cancelEventIfNotValid: true
        messageIfNotValid: ''
      amt:
        type: PLAYER_NUMBER
        comparator: SUPERIOR
        part1: '%checkitem_amount_mat:%var_center1_id%,strict%'
        part2: '0.0'
        cancelEventIfNotValid: true
        messageIfNotValid: ''
      plchC2:
        type: PLAYER_NUMBER
        comparator: INFERIOR
        part1: '%math_0_ABS((%block_z%)-(%var_z%))%'
        part2: '2.0'
        cancelEventIfNotValid: true
        messageIfNotValid: ''
    detailedBlocks:
      blocks: []
      cancelEventIfNotValid: false
      messageIfNotValid: ''
    blockCommands: []
    blockConditions:
      blockAroundCdts:
        aBC3:
          southValue: 0
          northValue: 0
          westValue: 0
          eastValue: 0
          aboveValue: 1
          underValue: 0
          errorMsg: §e
          blockMustBeExecutableBlock: []
          blockTypeMustBe: {}
          blockTypeMustNotBe: {}
    variablesModification: {}
  border1_1:
    name: '&eActivator'
    option: PLAYER_BLOCK_BREAK
    usageModification: 0
    cancelEvent: false
    silenceOutput: false
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems:
      errorMessage: ''
    requiredExecutableItems:
      errorMessage: ''
    detailedSlots:
    - -1
    commands:
    - execute at %player% run setblock %block_x_int% %block_y_int% %block_z_int% air
      destroy
    - papi parse %player% %checkitem_remove_mat:%var_border1_id%,amt:1,strict%
    - DELAYTICK 1
    - execute at %player% run setblock %block_x_int% %block_y_int% %block_z_int% %var_border1_id%
    playerConditions: {}
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions:
      plchC1:
        type: PLAYER_NUMBER
        comparator: EQUALS
        part1: '%math_0_ABS((%block_x%)-(%var_x%))%'
        part2: '2.0'
        cancelEventIfNotValid: true
        messageIfNotValid: ''
      amt:
        type: PLAYER_NUMBER
        comparator: SUPERIOR
        part1: '%checkitem_amount_mat:%var_border1_id%,strict%'
        part2: '0.0'
        cancelEventIfNotValid: true
        messageIfNotValid: ''
      block:
        type: PLAYER_PLAYER
        comparator: DIFFERENT
        part1: '%block_lower%'
        part2: '%var_center1_id%'
        cancelEventIfNotValid: true
        messageIfNotValid: ''
    detailedBlocks:
      blocks: []
      cancelEventIfNotValid: false
      messageIfNotValid: ''
    blockCommands: []
    blockConditions:
      blockAroundCdts:
        aBC3:
          southValue: 0
          northValue: 0
          westValue: 0
          eastValue: 0
          aboveValue: 1
          underValue: 0
          errorMsg: §e
          blockMustBeExecutableBlock: []
          blockTypeMustBe: {}
          blockTypeMustNotBe: {}
    variablesModification: {}
  border1_2:
    name: '&eActivator'
    option: PLAYER_BLOCK_BREAK
    usageModification: 0
    cancelEvent: false
    silenceOutput: false
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems:
      errorMessage: ''
    requiredExecutableItems:
      errorMessage: ''
    detailedSlots:
    - -1
    commands:
    - execute at %player% run setblock %block_x_int% %block_y_int% %block_z_int% air
      destroy
    - papi parse %player% %checkitem_remove_mat:%var_border1_id%,amt:1,strict%
    - DELAYTICK 1
    - execute at %player% run setblock %block_x_int% %block_y_int% %block_z_int% %var_border1_id%
    playerConditions: {}
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions:
      plchC1:
        type: PLAYER_NUMBER
        comparator: INFERIOR
        part1: '%math_0_ABS((%block_x%)-(%var_x%))%'
        part2: '2.0'
        cancelEventIfNotValid: true
        messageIfNotValid: ''
      amt:
        type: PLAYER_NUMBER
        comparator: SUPERIOR
        part1: '%checkitem_amount_mat:%var_border1_id%,strict%'
        part2: '0.0'
        cancelEventIfNotValid: true
        messageIfNotValid: ''
      block:
        type: PLAYER_PLAYER
        comparator: DIFFERENT
        part1: '%block_lower%'
        part2: '%var_center1_id%'
        cancelEventIfNotValid: true
        messageIfNotValid: ''
      plchC2:
        type: PLAYER_NUMBER
        comparator: EQUALS
        part1: '%math_0_ABS((%block_z%)-(%var_z%))%'
        part2: '2.0'
        cancelEventIfNotValid: true
        messageIfNotValid: ''
    detailedBlocks:
      blocks: []
      cancelEventIfNotValid: false
      messageIfNotValid: ''
    blockCommands: []
    blockConditions:
      blockAroundCdts:
        aBC3:
          southValue: 0
          northValue: 0
          westValue: 0
          eastValue: 0
          aboveValue: 1
          underValue: 0
          errorMsg: §e
          blockMustBeExecutableBlock: []
          blockTypeMustBe: {}
          blockTypeMustNotBe: {}
    variablesModification: {}
  selector_1_to_2:
    name: '&eActivator'
    option: PLAYER_RIGHT_CLICK
    typeTarget: NO_TYPE_TARGET
    usageModification: 0
    cancelEvent: false
    silenceOutput: false
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems:
      errorMessage: ''
    requiredExecutableItems:
      errorMessage: ''
    detailedSlots:
    - -1
    commands:
    - SENDMESSAGE §e§lSELECTOR = BORDER
    - execute at %player% run playsound block.piston.extend ambient %player%
    playerConditions:
      ifSneaking: true
      ifSneakingMsg: ''
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions:
      plchC1:
        type: PLAYER_STRING
        comparator: EQUALS
        part1: '%var_selector01%'
        part2: '>> Center'
        cancelEventIfNotValid: true
        messageIfNotValid: ''
      antispam:
        type: PLAYER_STRING
        comparator: EQUALS
        part1: '%var_antispam%'
        part2: '0'
        cancelEventIfNotValid: true
        messageIfNotValid: ''
    variablesModification:
      varModif2:
        variableName: antispam
        type: SET
        modification: '1'
      varModif1:
        variableName: selector02
        type: SET
        modification: '>> Border'
      varModif0:
        variableName: selector01
        type: SET
        modification: Center
  selector_2_to_1:
    name: '&eActivator'
    option: PLAYER_RIGHT_CLICK
    typeTarget: NO_TYPE_TARGET
    usageModification: 0
    cancelEvent: false
    silenceOutput: false
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems:
      errorMessage: ''
    requiredExecutableItems:
      errorMessage: ''
    detailedSlots:
    - -1
    commands:
    - SENDMESSAGE §e§lSELECTOR = CENTER
    - execute at %player% run playsound block.piston.extend ambient %player%
    playerConditions:
      ifSneaking: true
      ifSneakingMsg: ''
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions:
      plchC1:
        type: PLAYER_STRING
        comparator: EQUALS
        part1: '%var_selector02%'
        part2: '>> Border'
        cancelEventIfNotValid: true
        messageIfNotValid: ''
      antispam:
        type: PLAYER_STRING
        comparator: EQUALS
        part1: '%var_antispam%'
        part2: '0'
        cancelEventIfNotValid: true
        messageIfNotValid: ''
    variablesModification:
      varModif2:
        variableName: antispam
        type: SET
        modification: '1'
      varModif1:
        variableName: selector02
        type: SET
        modification: Border
      varModif0:
        variableName: selector01
        type: SET
        modification: '>> Center'
  activator3:
    name: '&eActivator'
    option: LOOP
    usageModification: 0
    cancelEvent: false
    silenceOutput: false
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems:
      errorMessage: ''
    requiredExecutableItems:
      errorMessage: ''
    detailedSlots:
    - -1
    commands: []
    playerConditions: {}
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions:
      antispam:
        type: PLAYER_STRING
        comparator: EQUALS
        part1: '%var_antispam%'
        part2: '1'
        cancelEventIfNotValid: true
        messageIfNotValid: ''
    delay: 1
    delayInTick: false
    variablesModification:
      varModif0:
        variableName: antispam
        type: SET
        modification: '0'
  selector_1_material:
    name: '&eActivator'
    option: PLAYER_LEFT_CLICK
    typeTarget: NO_TYPE_TARGET
    usageModification: 0
    cancelEvent: false
    silenceOutput: false
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems:
      errorMessage: ''
    requiredExecutableItems:
      errorMessage: ''
    detailedSlots:
    - -1
    commands:
    - SENDMESSAGE §f§lCenter Material = %checkitem_getinfo:offhand_mat:%
    - execute at %player% run playsound entity.player.levelup ambient %player%
    playerConditions:
      ifSneaking: true
      ifSneakingMsg: ''
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions:
      plchC1:
        type: PLAYER_STRING
        comparator: EQUALS
        part1: '%var_selector01%'
        part2: '>> Center'
        cancelEventIfNotValid: true
        messageIfNotValid: ''
    variablesModification:
      varModif1:
        variableName: center1_id
        type: SET
        modification: '%formatter_text_lowercase_{player_item_in_offhand}%'
      varModif0:
        variableName: center1
        type: SET
        modification: '%checkitem_getinfo:offhand_mat:%'
  selector_2_material:
    name: '&eActivator'
    option: PLAYER_LEFT_CLICK
    typeTarget: NO_TYPE_TARGET
    usageModification: 0
    cancelEvent: false
    silenceOutput: false
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems:
      errorMessage: ''
    requiredExecutableItems:
      errorMessage: ''
    detailedSlots:
    - -1
    commands:
    - SENDMESSAGE §f§lBorder Material = %checkitem_getinfo:offhand_mat:%
    - execute at %player% run playsound entity.player.levelup ambient %player%
    playerConditions:
      ifSneaking: true
      ifSneakingMsg: ''
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions:
      plchC1:
        type: PLAYER_STRING
        comparator: EQUALS
        part1: '%var_selector02%'
        part2: '>> Border'
        cancelEventIfNotValid: true
        messageIfNotValid: ''
    variablesModification:
      varModif1:
        variableName: border1_id
        type: SET
        modification: '%formatter_text_lowercase_{player_item_in_offhand}%'
      varModif0:
        variableName: border1
        type: SET
        modification: '%checkitem_getinfo:offhand_mat:%'
recognitions: []
attributes: {}
nbt:
  '0':
    key: Damage
    type: INT
    value: 0
config_5: true
config_update: true