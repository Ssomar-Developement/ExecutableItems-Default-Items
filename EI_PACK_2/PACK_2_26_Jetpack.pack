name: '&fJetpack'
lore:
- '&7&oItems from EI-PACKS 2 (9.99 euros)'
- '&7&oYou can purchase it on discord (Special70)'
- ''
- '&7Shift+Jump to activate Flight'
- '&f'
- '&7Click the item in the armor'
- '&7slot to disable the jetpack'
- '&f'
- '&7Jetpack can hold 160 fuel and gains'
- '&710 fuel per coal consumed. Takes away'
- '&71 fuel per second while flight is active'
- '&f'
- '&f&lStatus:'
- '&7&l - Flight: &f&l%var_x%'
- '&7&l - Fuel: &f&l%var_y_int%/160'
material: IRON_CHESTPLATE
glow: false
disableStack: false
keepItemOnDeath: false
canBeUsedOnlyByTheOwner: false
storeItemInfo: false
unbreakable: false
usage: 0
usageLimit: -1
durability: 240
dropOptions:
  glowDrop: false
  glowDropColor: WHITE
  displayNameDrop: false
hiders:
  hideEnchantments: false
  hideUnbreakable: false
  hideAttributes: false
  hidePotionEffects: false
  hideUsage: false
enchantments: {}
giveFirstJoin:
  giveFirstJoin: false
  giveFirstJoinAmount: 1
  giveFirstJoinSlot: 0
restrictions: {}
cancelEventIfNoPerm: false
cancelEventIfNotOwner: false
disabledWorlds: []
variables:
  x:
    variableName: x
    type: STRING
    default: §c§lDisabled
  y:
    variableName: y
    type: NUMBER
    default: 160.0
activators:
  activator1:
    name: '&eActivator'
    option: LOOP
    usageModification: 0
    cancelEvent: false
    silenceOutput: false
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems:
      errorMessage: ''
    requiredExecutableItems:
      errorMessage: ''
    detailedSlots:
    - 38
    commands:
    - 'LOOP START: 20'
    - execute at %player% run particle firework ^ ^1.6 ^-0.5 .1 .1 .1 0 5
    - DELAYTICK 1
    - LOOP END
    playerConditions: {}
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions:
      plchC1:
        type: PLAYER_STRING
        comparator: EQUALS
        part1: '%var_x%'
        part2: §a§lEnabled
        cancelEventIfNotValid: false
        messageIfNotValid: '&e'
    delay: 1
    delayInTick: false
    variablesModification: {}
  activator2:
    name: '&eActivator'
    option: LOOP
    usageModification: 0
    cancelEvent: false
    silenceOutput: false
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems:
      requiredItem0:
        material: COAL
        amount: 1
        notExecutableItem: false
      errorMessage: '&e'
    requiredExecutableItems:
      errorMessage: ''
    detailedSlots:
    - 38
    commands: []
    playerConditions: {}
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions:
      plchC1:
        type: PLAYER_NUMBER
        comparator: INFERIOR_OR_EQUALS
        part1: '%var_y%'
        part2: '150'
        cancelEventIfNotValid: false
        messageIfNotValid: '&e'
    delay: 1
    delayInTick: false
    variablesModification:
      varModif0:
        variableName: y
        type: MODIFICATION
        modification: 10.0
  activator02:
    name: '&eActivator'
    option: LOOP
    usageModification: 0
    cancelEvent: false
    silenceOutput: false
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems:
      errorMessage: ''
    requiredExecutableItems:
      errorMessage: ''
    detailedSlots:
    - 38
    commands: []
    playerConditions: {}
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions:
      plchC1:
        type: PLAYER_NUMBER
        comparator: SUPERIOR
        part1: '%var_y%'
        part2: '0'
        cancelEventIfNotValid: false
        messageIfNotValid: '&e'
      plchC2:
        type: PLAYER_STRING
        comparator: EQUALS
        part1: '%var_x%'
        part2: §a§lEnabled
        cancelEventIfNotValid: false
        messageIfNotValid: '&e'
    delay: 1
    delayInTick: false
    variablesModification:
      varModif0:
        variableName: y
        type: MODIFICATION
        modification: -1.0
  activator002:
    name: '&eActivator'
    option: LOOP
    usageModification: 0
    cancelEvent: false
    silenceOutput: false
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems:
      errorMessage: ''
    requiredExecutableItems:
      errorMessage: ''
    detailedSlots:
    - 38
    commands:
    - FLY OFF false
    playerConditions: {}
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions:
      plchC1:
        type: PLAYER_NUMBER
        comparator: INFERIOR
        part1: '%var_y%'
        part2: '1'
        cancelEventIfNotValid: false
        messageIfNotValid: '&e'
      plchC2:
        type: PLAYER_STRING
        comparator: EQUALS
        part1: '%var_x%'
        part2: §a§lEnabled
        cancelEventIfNotValid: false
        messageIfNotValid: '&e'
    delay: 1
    delayInTick: false
    variablesModification:
      varModif0:
        variableName: x
        type: SET
        modification: §c§lDisabled
  activator3:
    name: '&eActivator'
    option: PLAYER_JUMP
    usageModification: 0
    cancelEvent: false
    silenceOutput: false
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems:
      errorMessage: ''
    requiredExecutableItems:
      errorMessage: ''
    detailedSlots:
    - 38
    commands:
    - FLY ON
    - execute at %player% run playsound entity.blaze.shoot ambient %player%
    playerConditions:
      ifSneaking: true
      ifSneakingMsg: ''
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions:
      plchC1:
        type: PLAYER_STRING
        comparator: EQUALS
        part1: '%var_x%'
        part2: §c§lDisabled
        cancelEventIfNotValid: false
        messageIfNotValid: '&e'
      plchC2:
        type: PLAYER_NUMBER
        comparator: SUPERIOR
        part1: '%var_y%'
        part2: '0'
        cancelEventIfNotValid: false
        messageIfNotValid: '&e'
    variablesModification:
      varModif0:
        variableName: x
        type: SET
        modification: §a§lEnabled
  activator4:
    name: '&eActivator'
    option: PLAYER_UNEQUIP_THE_EI
    usageModification: 0
    cancelEvent: true
    silenceOutput: false
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems:
      errorMessage: ''
    requiredExecutableItems:
      errorMessage: ''
    detailedSlots:
    - -1
    commands:
    - FLY OFF false
    - execute at %player% run playsound entity.blaze.shoot ambient %player%
    playerConditions: {}
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions:
      plchC1:
        type: PLAYER_STRING
        comparator: EQUALS
        part1: '%var_x%'
        part2: §a§lEnabled
        cancelEventIfNotValid: false
        messageIfNotValid: '&e'
    variablesModification:
      varModif0:
        variableName: x
        type: SET
        modification: §c§lDisabled
recognitions: []
attributes: {}
nbt:
  '0':
    key: Damage
    type: INT
    value: 0
config_5: true
config_update: true