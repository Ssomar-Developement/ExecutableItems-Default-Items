name: '&fFeeder Pickaxe'
lore:
- '&7&oItems from EI-PACKS 2 (9.99 euros)'
- '&7&oYou can purchase it on discord (Special70)'
- ''
- '&7Regains 1 Hunger for every'
- '&7breaking stone and deepslate'
- '&7Adding efficiency 5 unlocks'
- '&7the "Digestion" ability.'
- ''
- '&f&lDigeston:'
- '&7When your hunger reaches max,'
- '&7Right-Click to gain Haste 5'
- '&7for 5 seconds while your hunger'
- '&7reaches to 0.'
- '&c10s Cooldown'
material: DIAMOND_PICKAXE
glow: false
disableStack: false
keepItemOnDeath: false
canBeUsedOnlyByTheOwner: false
storeItemInfo: false
unbreakable: false
usage: 0
usageLimit: -1
durability: 1561
dropOptions:
  glowDrop: false
  glowDropColor: WHITE
  displayNameDrop: false
hiders:
  hideEnchantments: false
  hideUnbreakable: false
  hideAttributes: false
  hidePotionEffects: false
  hideUsage: false
enchantments: {}
giveFirstJoin:
  giveFirstJoin: false
  giveFirstJoinAmount: 1
  giveFirstJoinSlot: 0
restrictions: {}
cancelEventIfNoPerm: false
cancelEventIfNotOwner: false
disabledWorlds: []
variables: {}
activators:
  activator1:
    name: '&eActivator'
    option: PLAYER_BLOCK_BREAK
    usageModification: 0
    cancelEvent: false
    silenceOutput: false
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems:
      errorMessage: ''
    requiredExecutableItems:
      errorMessage: ''
    detailedSlots:
    - -1
    commands:
    - REGAIN FOOD 1
    - execute at %player% run playsound minecraft:entity.dolphin.eat ambient %player%
    - DELAYTICK 5
    - execute at %player% run playsound minecraft:entity.dolphin.eat ambient %player%
    playerConditions: {}
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions: {}
    detailedBlocks:
      blocks:
      - STONE
      - DEEPSLATE
      cancelEventIfNotValid: false
      messageIfNotValid: ''
    blockCommands: []
    blockConditions: {}
    variablesModification: {}
  activator2:
    name: '&eActivator'
    option: PLAYER_RIGHT_CLICK
    typeTarget: NO_TYPE_TARGET
    usageModification: 0
    cancelEvent: false
    silenceOutput: false
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 10
      isCooldownInTicks: false
      cooldownMsg: ''
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems:
      errorMessage: ''
    requiredExecutableItems:
      errorMessage: ''
    detailedSlots:
    - -1
    commands:
    - effect give %player% haste 10 9 true
    - 'LOOP START: 10'
    - REGAIN FOOD -15
    - execute at %player% run particle firework ~ ~1 ~ .5 .5 .5 0.1 10
    - DELAY 1
    - LOOP END
    playerConditions: {}
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions:
      plchC1:
        type: PLAYER_STRING
        comparator: EQUALS
        part1: '%player_item_in_hand_level_DIG_SPEED%'
        part2: '5'
        cancelEventIfNotValid: false
        messageIfNotValid: '&e'
      plchC2:
        type: PLAYER_NUMBER
        comparator: SUPERIOR_OR_EQUALS
        part1: '%player_food_level%'
        part2: '20'
        cancelEventIfNotValid: false
        messageIfNotValid: '&cYour hunger bar is not full.'
    variablesModification: {}
recognitions: []
attributes: {}
customModelData: 2
config_5: true
config_update: true