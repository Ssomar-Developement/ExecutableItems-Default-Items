name: '&fMineshaft Maker'
lore:
- '&7&oItems from EI-PACKS 2 (9.99 euros)'
- '&7&oYou can purchase it on discord (Special70)'
- ''
- '&7Breaks blocks in a'
- '&73x3x3 size while forming'
- '&7a mineshaft with the oak'
- '&7planks, fences and torches'
- '&7you have in your inventory'
material: DIAMOND_PICKAXE
glow: false
disableStack: false
keepItemOnDeath: false
canBeUsedOnlyByTheOwner: false
storeItemInfo: false
unbreakable: false
usage: 0
usageLimit: -1
durability: 1561
dropOptions:
  glowDrop: false
  glowDropColor: WHITE
  displayNameDrop: false
hiders:
  hideEnchantments: false
  hideUnbreakable: false
  hideAttributes: false
  hidePotionEffects: false
  hideUsage: false
enchantments: {}
giveFirstJoin:
  giveFirstJoin: false
  giveFirstJoinAmount: 1
  giveFirstJoinSlot: 0
restrictions: {}
cancelEventIfNoPerm: false
cancelEventIfNotOwner: false
disabledWorlds: []
variables:
  x:
    variableName: x
    type: NUMBER
    default: 0.0
  y:
    variableName: y
    type: NUMBER
    default: 0.0
  z:
    variableName: z
    type: NUMBER
    default: 0.0
activators:
  activator1:
    name: '&eActivator'
    option: PLAYER_BLOCK_BREAK
    usageModification: 0
    cancelEvent: false
    silenceOutput: false
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 5
      isCooldownInTicks: true
      cooldownMsg: ''
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems:
      errorMessage: ''
    requiredExecutableItems:
      errorMessage: ''
    detailedSlots:
    - -1
    commands: []
    playerConditions: {}
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions: {}
    detailedBlocks:
      blocks: []
      cancelEventIfNotValid: false
      messageIfNotValid: ''
    blockCommands:
    - MINEINCUBE 2
    blockConditions: {}
    variablesModification:
      varModif2:
        variableName: z
        type: SET
        modification: '%block_z_int%'
      varModif1:
        variableName: y
        type: SET
        modification: '%block_y_int%'
      varModif0:
        variableName: x
        type: SET
        modification: '%block_x_int%'
  activator2:
    name: '&eActivator'
    option: PLAYER_BLOCK_BREAK
    usageModification: 0
    cancelEvent: false
    silenceOutput: false
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems:
      requiredItem0:
        material: OAK_PLANKS
        amount: 1
        notExecutableItem: false
      errorMessage: '&e'
    requiredExecutableItems:
      errorMessage: ''
    detailedSlots:
    - -1
    commands: []
    playerConditions: {}
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions:
      plchC1:
        type: PLAYER_STRING
        comparator: EQUALS
        part1: '%math_0_(%var_y%)-(%block_y%)%'
        part2: '2'
        cancelEventIfNotValid: false
        messageIfNotValid: ''
    detailedBlocks:
      blocks:
      - STONE
      - DEEPSLATE
      - GRAVEL
      - TUFF
      - COBBLESTONE
      - IRON_ORE
      - GOLD_ORE
      - COPPER_ORE
      - REDSTONE_ORE
      - LAPIS_ORE
      - DIAMOND_ORE
      - EMERALD_ORE
      - COAL_ORE
      - DEEPSLATE_IRON_ORE
      - DEEPSLATE_GOLD_ORE
      - DEEPSLATE_COPPER_ORE
      - DEEPSLATE_REDSTONE_ORE
      - DEEPSLATE_LAPIS_ORE
      - DEEPSLATE_DIAMOND_ORE
      - DEEPSLATE_EMERALD_ORE
      - DEEPSLATE_COAL_ORE
      - ANDESITE
      - GRANITE
      - DIORITE
      - WATER
      - LAVA
      cancelEventIfNotValid: true
      messageIfNotValid: ''
    blockCommands:
    - DELAYTICK 1
    - SETBLOCK OAK_PLANKS
    blockConditions: {}
    variablesModification: {}
  activator3:
    name: '&eActivator'
    option: PLAYER_BLOCK_BREAK
    usageModification: 0
    cancelEvent: false
    silenceOutput: false
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems:
      requiredItem0:
        material: OAK_FENCE
        amount: 1
        notExecutableItem: false
      errorMessage: '&e'
    requiredExecutableItems:
      errorMessage: ''
    detailedSlots:
    - -1
    commands: []
    playerConditions: {}
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions:
      plchC1:
        type: PLAYER_STRING
        comparator: EQUALS
        part1: '%math_0_ABS((%var_x%)-(%block_x%))%'
        part2: '2'
        cancelEventIfNotValid: false
        messageIfNotValid: ''
      plchC3:
        type: PLAYER_STRING
        comparator: DIFFERENT
        part1: '%math_0_(%var_y%)-(%block_y%)%'
        part2: '2'
        cancelEventIfNotValid: false
        messageIfNotValid: ''
      plchC2:
        type: PLAYER_STRING
        comparator: EQUALS
        part1: '%math_0_ABS((%var_z%)-(%block_z%))%'
        part2: '2'
        cancelEventIfNotValid: false
        messageIfNotValid: ''
    detailedBlocks:
      blocks:
      - STONE
      - DEEPSLATE
      - GRAVEL
      - TUFF
      - COBBLESTONE
      - IRON_ORE
      - GOLD_ORE
      - COPPER_ORE
      - REDSTONE_ORE
      - LAPIS_ORE
      - DIAMOND_ORE
      - EMERALD_ORE
      - COAL_ORE
      - DEEPSLATE_IRON_ORE
      - DEEPSLATE_GOLD_ORE
      - DEEPSLATE_COPPER_ORE
      - DEEPSLATE_REDSTONE_ORE
      - DEEPSLATE_LAPIS_ORE
      - DEEPSLATE_DIAMOND_ORE
      - DEEPSLATE_EMERALD_ORE
      - DEEPSLATE_COAL_ORE
      - ANDESITE
      - GRANITE
      - DIORITE
      - WATER
      - LAVA
      cancelEventIfNotValid: true
      messageIfNotValid: ''
    blockCommands:
    - DELAYTICK 1
    - SETBLOCK OAK_FENCE
    blockConditions: {}
    variablesModification: {}
  activator4:
    name: '&eActivator'
    option: PLAYER_BLOCK_BREAK
    usageModification: 0
    cancelEvent: false
    silenceOutput: false
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems:
      requiredItem0:
        material: TORCH
        amount: 1
        notExecutableItem: false
      errorMessage: '&e'
    requiredExecutableItems:
      errorMessage: ''
    detailedSlots:
    - -1
    commands: []
    playerConditions: {}
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions:
      plchC1:
        type: PLAYER_STRING
        comparator: EQUALS
        part1: '%math_0_(%var_y%)-(%block_y%)%'
        part2: '1'
        cancelEventIfNotValid: false
        messageIfNotValid: ''
      plchC3:
        type: PLAYER_STRING
        comparator: EQUALS
        part1: '%math_0_(%var_z%)-(%block_z%)%'
        part2: '0'
        cancelEventIfNotValid: false
        messageIfNotValid: ''
      plchC2:
        type: PLAYER_STRING
        comparator: EQUALS
        part1: '%math_0_(%var_x%)-(%block_x%)%'
        part2: '0'
        cancelEventIfNotValid: false
        messageIfNotValid: ''
    detailedBlocks:
      blocks:
      - STONE
      - DEEPSLATE
      - GRAVEL
      - TUFF
      - COBBLESTONE
      - IRON_ORE
      - GOLD_ORE
      - COPPER_ORE
      - REDSTONE_ORE
      - LAPIS_ORE
      - DIAMOND_ORE
      - EMERALD_ORE
      - COAL_ORE
      - DEEPSLATE_IRON_ORE
      - DEEPSLATE_GOLD_ORE
      - DEEPSLATE_COPPER_ORE
      - DEEPSLATE_REDSTONE_ORE
      - DEEPSLATE_LAPIS_ORE
      - DEEPSLATE_DIAMOND_ORE
      - DEEPSLATE_EMERALD_ORE
      - DEEPSLATE_COAL_ORE
      - ANDESITE
      - GRANITE
      - DIORITE
      - WATER
      - LAVA
      cancelEventIfNotValid: true
      messageIfNotValid: ''
    blockCommands:
    - DELAYTICK 1
    - SETBLOCK TORCH
    blockConditions: {}
    variablesModification: {}
recognitions: []
attributes: {}
customModelData: 7
config_5: true
config_update: true