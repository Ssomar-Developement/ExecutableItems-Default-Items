name: '&fBlood Staff'
lore:
- '&7&oItems from EI-PACKS 2 (9.99 euros)'
- '&7&oYou can purchase it on discord (Special70)'
- ''
- '&7Right-Click to shoot'
- '&7a ray of enhanced blood'
- '&7to rapidly siphon health'
- '&7from targets'
- ''
- '&cCosts 3hp per shoot.'
material: STICK
glow: false
disableStack: false
keepItemOnDeath: false
canBeUsedOnlyByTheOwner: false
storeItemInfo: false
unbreakable: false
usage: 0
usageLimit: -1
dropOptions:
  glowDrop: false
  glowDropColor: WHITE
  displayNameDrop: false
hiders:
  hideEnchantments: false
  hideUnbreakable: false
  hideAttributes: false
  hidePotionEffects: false
  hideUsage: false
enchantments: {}
giveFirstJoin:
  giveFirstJoin: false
  giveFirstJoinAmount: 1
  giveFirstJoinSlot: 0
restrictions: {}
cancelEventIfNoPerm: false
cancelEventIfNotOwner: false
disabledWorlds: []
variables: {}
activators:
  activator1:
    name: '&eActivator'
    option: PLAYER_RIGHT_CLICK
    typeTarget: NO_TYPE_TARGET
    usageModification: 0
    cancelEvent: false
    silenceOutput: false
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems:
      errorMessage: ''
    requiredExecutableItems:
      errorMessage: ''
    detailedSlots:
    - 40
    - -1
    commands:
    - SETHEALTH %math_0_{player_health}-2%
    - DAMAGE 1
    - 'LOOP START: 10'
    - LAUNCH PACK_2_12
    - DELAYTICK 2
    - LOOP END
    playerConditions: {}
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions: {}
    variablesModification: {}
  activator2:
    name: '&eActivator'
    option: PROJECTILE_HIT_ENTITY
    usageModification: 0
    cancelEvent: false
    silenceOutput: false
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems:
      errorMessage: ''
    requiredExecutableItems:
      errorMessage: ''
    detailedSlots: []
    commands:
    - REGAIN HEALTH 1
    playerConditions: {}
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions: {}
    mustBeAProjectileLaunchWithTheSameEI: true
    detailedEntities: []
    entityCommands:
    - DAMAGE 5
    entityConditions:
      ifIsOnTheBlock: {}
      ifIsNotOnTheBlock: {}
      ifNotEntityType: []
    variablesModification: {}
  activator3:
    name: '&eActivator'
    option: PROJECTILE_HIT_PLAYER
    usageModification: 0
    cancelEvent: false
    silenceOutput: false
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems:
      errorMessage: ''
    requiredExecutableItems:
      errorMessage: ''
    detailedSlots: []
    commands:
    - REGAIN HEALTH 1
    playerConditions: {}
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions: {}
    mustBeAProjectileLaunchWithTheSameEI: true
    targetCommands:
    - DAMAGE 5
    targetConditions: {}
    variablesModification: {}
recognitions: []
attributes: {}
customModelData: 1
config_5: true
config_update: true