name: '&fEarthquake Pickaxe'
lore:
- '&7&oItems from EI-PACKS 2 (9.99 euros)'
- '&7&oYou can purchase it on discord (Special70)'
- ''
- '&7All blocks the pickaxe breaks'
- '&7will fall due to gravity'
- ''
- '&7Right-Click on a block'
- '&7to do a seismic strike'
- '&7that turns all breakable blocks'
- '&7into falling blocks in a 3 block'
- '&7radius.'
- '&c5s Cooldown'
material: DIAMOND_PICKAXE
glow: false
disableStack: false
keepItemOnDeath: false
canBeUsedOnlyByTheOwner: false
storeItemInfo: false
unbreakable: false
usage: 0
usageLimit: -1
durability: 1561
dropOptions:
  glowDrop: false
  glowDropColor: WHITE
  displayNameDrop: false
hiders:
  hideEnchantments: false
  hideUnbreakable: false
  hideAttributes: false
  hidePotionEffects: false
  hideUsage: false
enchantments: {}
giveFirstJoin:
  giveFirstJoin: false
  giveFirstJoinAmount: 1
  giveFirstJoinSlot: 0
restrictions: {}
cancelEventIfNoPerm: false
cancelEventIfNotOwner: false
disabledWorlds: []
variables: {}
activators:
  activator1:
    name: '&eActivator'
    option: PLAYER_RIGHT_CLICK
    typeTarget: ONLY_BLOCK
    usageModification: 0
    cancelEvent: false
    silenceOutput: false
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 5
      isCooldownInTicks: false
      cooldownMsg: ''
      displayCooldownMessage: false
      cancelEventIfInCooldown: true
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems:
      errorMessage: ''
    requiredExecutableItems:
      errorMessage: ''
    detailedSlots:
    - -1
    commands:
    - execute at %player% run particle explosion_emitter %block_x% %block_y% %block_z%
      .1 .1 .1 0 1
    - execute in <<%block_world%>> positioned %block_x% %block_y% %block_z% run playsound
      entity.generic.explode ambient @a[distance=..12]
    playerConditions: {}
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions: {}
    detailedBlocks:
      blocks: []
      cancelEventIfNotValid: false
      messageIfNotValid: ''
    blockCommands:
    - MINEINCUBE 2
    blockConditions: {}
    variablesModification: {}
  activator02:
    name: '&eActivator'
    option: PLAYER_BLOCK_BREAK
    usageModification: 0
    cancelEvent: true
    silenceOutput: false
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: ''
      displayCooldownMessage: false
      cancelEventIfInCooldown: true
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems:
      errorMessage: ''
    requiredExecutableItems:
      errorMessage: ''
    detailedSlots:
    - -1
    commands:
    - execute at %player% positioned %block_x% %block_y% %block_z% unless block ~
      ~ ~ chest unless block ~ ~ ~ trapped_chest unless block ~ ~ ~ sunflower unless
      block ~ ~ ~ lilac unless block ~ ~ ~ rose_bush unless block ~ ~ ~ peony unless
      block ~ ~ ~ tall_grass unless block ~ ~ ~ large_fern unless block ~ ~ ~ shulker_box
      unless block ~ ~ ~ orange_shulker_box unless block ~ ~ ~ magenta_shulker_box
      unless block ~ ~ ~ white_shulker_box unless block ~ ~ ~ light_blue_shulker_box
      unless block ~ ~ ~ yellow_shulker_box unless block ~ ~ ~ lime_shulker_box unless
      block ~ ~ ~ pink_shulker_box unless block ~ ~ ~ gray_shulker_box unless block
      ~ ~ ~ light_gray_shulker_box unless block ~ ~ ~ cyan_shulker_box unless block
      ~ ~ ~ purple_shulker_box unless block ~ ~ ~ blue_shulker_box unless block ~
      ~ ~ brown_shulker_box unless block ~ ~ ~ green_shulker_box unless block ~ ~
      ~ red_shulker_box unless block ~ ~ ~ black_shulker_box unless block ~ ~ ~ oak_door
      unless block ~ ~ ~ furnace unless block ~ ~ ~ blast_furnace unless block ~ ~
      ~ smoker unless block ~ ~ ~ barrel unless block ~ ~ ~ composter unless block
      ~ ~ ~ campfire unless block ~ ~ ~ soul_campfire unless block ~ ~ ~ lodestone
      unless block ~ ~ ~ respawn_anchor unless block ~ ~ ~ bee_nest unless block ~
      ~ ~ beehive unless block ~ ~ ~ spruce_door unless block ~ ~ ~ birch_door unless
      block ~ ~ ~ acacia_door unless block ~ ~ ~ dark_oak_door unless block ~ ~ ~
      jungle_door unless block ~ ~ ~ iron_door unless block ~ ~ ~ crimson_door unless
      block ~ ~ ~ warped_door run setblock %block_x_int% %block_y_int% %block_z_int%
      air
    - execute at %player% positioned %block_x% %block_y% %block_z% unless block ~
      ~ ~ chest unless block ~ ~ ~ trapped_chest unless block ~ ~ ~ sunflower unless
      block ~ ~ ~ lilac unless block ~ ~ ~ rose_bush unless block ~ ~ ~ peony unless
      block ~ ~ ~ tall_grass unless block ~ ~ ~ large_fern unless block ~ ~ ~ shulker_box
      unless block ~ ~ ~ orange_shulker_box unless block ~ ~ ~ magenta_shulker_box
      unless block ~ ~ ~ white_shulker_box unless block ~ ~ ~ light_blue_shulker_box
      unless block ~ ~ ~ yellow_shulker_box unless block ~ ~ ~ lime_shulker_box unless
      block ~ ~ ~ pink_shulker_box unless block ~ ~ ~ gray_shulker_box unless block
      ~ ~ ~ light_gray_shulker_box unless block ~ ~ ~ cyan_shulker_box unless block
      ~ ~ ~ purple_shulker_box unless block ~ ~ ~ blue_shulker_box unless block ~
      ~ ~ brown_shulker_box unless block ~ ~ ~ green_shulker_box unless block ~ ~
      ~ red_shulker_box unless block ~ ~ ~ black_shulker_box unless block ~ ~ ~ oak_door
      unless block ~ ~ ~ furnace unless block ~ ~ ~ blast_furnace unless block ~ ~
      ~ smoker unless block ~ ~ ~ barrel unless block ~ ~ ~ composter unless block
      ~ ~ ~ campfire unless block ~ ~ ~ soul_campfire unless block ~ ~ ~ lodestone
      unless block ~ ~ ~ respawn_anchor unless block ~ ~ ~ bee_nest unless block ~
      ~ ~ beehive unless block ~ ~ ~ spruce_door unless block ~ ~ ~ birch_door unless
      block ~ ~ ~ acacia_door unless block ~ ~ ~ dark_oak_door unless block ~ ~ ~
      jungle_door unless block ~ ~ ~ iron_door unless block ~ ~ ~ crimson_door unless
      block ~ ~ ~ warped_door run summon falling_block %block_x% %block_y% %block_z%
      {BlockState:{Name:"minecraft:%block_lower%"},Time:1}
    playerConditions: {}
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions: {}
    detailedBlocks:
      blocks: []
      cancelEventIfNotValid: false
      messageIfNotValid: ''
    blockCommands: []
    blockConditions: {}
    variablesModification: {}
recognitions: []
attributes: {}
customModelData: 3
config_5: true
config_update: true