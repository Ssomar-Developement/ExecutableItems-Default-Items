name: '&9Sayaka Miki'
lore:
- '&7&oItems from EI-PACKS 1 (9.99 euros)'
- '&7&oYou can purchase it on discord (Special70)'
- ''
- '&fLeft Click to do a dash'
- '&f1 second cooldown'
- ''
- '&fRight Click to teleport'
- '&ffor a short distance'
- '&f2 second cooldown'
- ''
- '&fSneak to suspend your movement'
- '&f2 second cooldown'
- ''
- '&fWhen hitting targets, you dash forward'
- '&fand dealing 6, 7, 8 damage per second'
material: PLAYER_HEAD
glow: false
disableStack: false
keepItemOnDeath: false
canBeUsedOnlyByTheOwner: false
storeItemInfo: false
unbreakable: false
usage: 0
usageLimit: -1
dropOptions:
  glowDrop: false
  glowDropColor: WHITE
  displayNameDrop: false
hiders:
  hideEnchantments: false
  hideUnbreakable: false
  hideAttributes: false
  hidePotionEffects: false
  hideUsage: false
enchantments: {}
giveFirstJoin:
  giveFirstJoin: false
  giveFirstJoinAmount: 1
  giveFirstJoinSlot: 0
restrictions:
  cancel-item-place: true
cancelEventIfNoPerm: false
cancelEventIfNotOwner: false
disabledWorlds: []
variables: {}
activators:
  activator1:
    name: '&eActivator'
    option: PLAYER_RIGHT_CLICK
    typeTarget: NO_TYPE_TARGET
    usageModification: 0
    cancelEvent: false
    silenceOutput: true
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 2
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems: {}
    requiredExecutableItems: {}
    detailedSlots:
    - -1
    commands:
    - execute at %player% run playsound minecraft:entity.firework_rocket.large_blast
      ambient %player%
    - execute at %player% run playsound minecraft:entity.firework_rocket.blast ambient
      %player%
    - execute at %player% run particle dust 0.01 0.5 1 1 ~ ~ ~ 1 1 1 0 100
    - execute at %player% run particle dust 0.01 1 1 1 ~ ~ ~ 1 1 1 0 100
    - execute at %player% run particle firework ~ ~1 ~ 0.1 0.1 0.1 1 50
    - execute at %player% run particle firework ^ ^1.6 ^1.0 0.01 0.01 0.01 0.2 5
    - execute at %player% run particle firework ^ ^1.6 ^1.2 0.01 0.01 0.01 0.2 5
    - execute at %player% run particle firework ^ ^1.6 ^1.4 0.01 0.01 0.01 0.2 5
    - execute at %player% run particle firework ^ ^1.6 ^1.6 0.01 0.01 0.01 0.2 5
    - execute at %player% run particle firework ^ ^1.6 ^2.0 0.01 0.01 0.01 0.2 5
    - execute at %player% run particle firework ^ ^1.6 ^2.2 0.01 0.01 0.01 0.2 5
    - execute at %player% run particle firework ^ ^1.6 ^2.4 0.01 0.01 0.01 0.2 5
    - execute at %player% run particle firework ^ ^1.6 ^2.6 0.01 0.01 0.01 0.2 5
    - execute at %player% run particle firework ^ ^1.6 ^2.8 0.01 0.01 0.01 0.2 5
    - execute at %player% run particle firework ^ ^1.6 ^3.0 0.01 0.01 0.01 0.2 5
    - DELAYTICK 2
    - TELEPORTONCURSOR 5 true
    playerConditions: {}
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions: {}
    variablesModification: {}
  activator2:
    name: '&eActivator'
    option: PLAYER_CLICK_ON_ENTITY
    detailedClick: LEFT
    usageModification: 0
    cancelEvent: false
    silenceOutput: true
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems: {}
    requiredExecutableItems: {}
    detailedSlots:
    - -1
    commands:
    - FRONTDASH 2 0.2
    - 'LOOP START: 6'
    - execute at %player% run playsound entity.player.attack.sweep ambient %player%
    - execute at %entity_uuid% run particle sweep_attack ~ ~1 ~ 1 1 1 0 12
    - DELAYTICK 6
    - LOOP END
    playerConditions: {}
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions: {}
    detailedEntities: []
    entityCommands:
    - DAMAGE 6
    - DELAYTICK 12
    - DAMAGE 7
    - DELAYTICK 12
    - DAMAGE 8
    entityConditions:
      ifIsOnTheBlock: {}
      ifIsNotOnTheBlock: {}
      ifNotEntityType: []
    variablesModification: {}
  activator10:
    name: '&eActivator'
    option: PLAYER_CLICK_ON_PLAYER
    detailedClick: LEFT
    usageModification: 0
    cancelEvent: false
    silenceOutput: true
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems: {}
    requiredExecutableItems: {}
    detailedSlots:
    - -1
    commands:
    - FRONTDASH 2 0.2
    - 'LOOP START: 6'
    - execute at %player% run playsound entity.player.attack.sweep ambient %player%
    - execute at %target% run particle sweep_attack ~ ~1 ~ 1 1 1 0 12
    - DELAYTICK 6
    - LOOP END
    playerConditions: {}
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions: {}
    targetCommands:
    - DAMAGE 6
    - DELAYTICK 12
    - DAMAGE 7
    - DELAYTICK 12
    - DAMAGE 8
    targetConditions: {}
    variablesModification: {}
  activator3:
    name: '&eActivator'
    option: PLAYER_LEFT_CLICK
    typeTarget: NO_TYPE_TARGET
    usageModification: 0
    cancelEvent: false
    silenceOutput: true
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 1
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems: {}
    requiredExecutableItems: {}
    detailedSlots:
    - -1
    commands:
    - FRONTDASH 2 0.2
    - execute at %player% run playsound entity.egg.throw ambient %player%
    - execute at %player% run particle dust 1 1 1 1 ~ ~ ~ 1 1 1 0 60
    playerConditions: {}
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions: {}
    variablesModification: {}
  activator4:
    name: '&eActivator'
    option: PLAYER_ACTIVE_SNEAK
    usageModification: 0
    cancelEvent: false
    silenceOutput: true
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 2
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems: {}
    requiredExecutableItems: {}
    detailedSlots:
    - -1
    commands:
    - execute at %player% run playsound entity.player.attack.sweep ambient %player%
    - execute at %player% run particle sweep_attack ~ ~1 ~ 2 2 2 0 30
    - execute at %player% run execute as %player% run teleport %x% %y_int% %z%
    playerConditions: {}
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions: {}
    variablesModification: {}
recognitions: []
headValue: eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvMzgxNzZlNjczMjJjZDMwNWY0ZGYyNTY2NTNiMWI0OTU2MWUxNTQ5MmYxYWM2ZjMzZmQzYTdkOGE4YjJjYzM1OCJ9fX0=
headDBID: ''
attributes: {}
config_5: true
config_update: true