name: '&bWendy Marvell'
lore:
- '&7&oItems from EI-PACKS 1 (9.99 euros)'
- '&7&oYou can purchase it on discord (Special70)'
- ''
- '&fRight Click to hover in'
- '&fthe air and dash'
- '&f2 second cooldown'
- ''
- '&fSneak to summon wind around you.'
- '&fevery second, you are healed by 1'
- '&fhealth point and suspends movement'
- '&fof projectiles around you and you'
- '&fdamage nearby targets by 5'
- ''
- '&fSneak and jump to pull targets near you'
- '&fand jump really high'
- '&f3 second cooldown'
- ''
- '&fLeft Click to toss nearby targets in the'
- '&fair and damage them by 6'
- '&f2 second cooldown'
material: PLAYER_HEAD
glow: false
disableStack: false
keepItemOnDeath: false
canBeUsedOnlyByTheOwner: false
storeItemInfo: false
unbreakable: false
usage: 0
usageLimit: -1
dropOptions:
  glowDrop: false
  glowDropColor: WHITE
  displayNameDrop: false
hiders:
  hideEnchantments: false
  hideUnbreakable: false
  hideAttributes: false
  hidePotionEffects: false
  hideUsage: false
enchantments: {}
giveFirstJoin:
  giveFirstJoin: false
  giveFirstJoinAmount: 1
  giveFirstJoinSlot: 0
restrictions:
  cancel-item-place: true
cancelEventIfNoPerm: false
cancelEventIfNotOwner: false
disabledWorlds: []
variables: {}
activators:
  activator1:
    name: '&eActivator'
    option: LOOP
    usageModification: 0
    cancelEvent: false
    silenceOutput: true
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems: {}
    requiredExecutableItems: {}
    detailedSlots:
    - -1
    commands:
    - execute at %player% run playsound entity.player.attack.sweep ambient %player%
    - execute at %player% run particle sweep_attack ~ ~2 ~ 2 2 2 0 30
    - AROUND 3 false DAMAGE 5
    - MOB_AROUND 3 true DAMAGE 5
    - REGAIN HEALTH 2
    - 'LOOP START: 5'
    - execute at %player% run execute at @e[distance=..5,type=!fireball] run execute
      as @e[name=!%player%,distance=..0.001] run teleport ~ ~ ~
    - DELAYTICK 1
    - LOOP END
    playerConditions:
      ifSneaking: true
      ifSneakingMsg: ''
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions: {}
    delay: 1
    delayInTick: false
    variablesModification: {}
  activator2:
    name: '&eActivator'
    option: PLAYER_JUMP
    usageModification: 0
    cancelEvent: false
    silenceOutput: true
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 3
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems: {}
    requiredExecutableItems: {}
    detailedSlots:
    - -1
    commands:
    - execute at %player% run playsound entity.player.attack.sweep ambient %player%
    - execute at %player% run particle sweep_attack ~ ~ ~ 6 1 6 0 50
    - DELAYTICK 1
    - execute at %player% run playsound entity.player.attack.sweep ambient %player%
    - execute at %player% run particle sweep_attack ~ ~ ~ 3 1 3 0 50
    - DELAYTICK 1
    - execute at %player% run playsound entity.player.attack.sweep ambient %player%
    - execute at %player% run particle sweep_attack ~ ~ ~ 1 1 1 0 50
    - 'LOOP START: 3'
    - AROUND 6 false CUSTOMDASH1 %x% %y% %z%
    - MOB_AROUND 6 true CUSTOMDASH1 %x% %y% %z%
    - DELAYTICK 1
    - LOOP END
    - JUMP 1
    - effect give %player% slow_falling 2 0
    - DELAYTICK 30
    - effect clear %player% slow_falling
    playerConditions:
      ifSneaking: true
      ifSneakingMsg: ''
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions: {}
    variablesModification: {}
  activator3:
    name: '&eActivator'
    option: PLAYER_LEFT_CLICK
    typeTarget: NO_TYPE_TARGET
    usageModification: 0
    cancelEvent: false
    silenceOutput: true
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 2
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems: {}
    requiredExecutableItems: {}
    detailedSlots:
    - -1
    commands:
    - execute at %player% run playsound entity.player.attack.sweep ambient %player%
    - AROUND 6 false CUSTOMDASH1 %around_target_x% %around_target_y%+2 %around_target_z%
    - MOB_AROUND 6 true CUSTOMDASH1 %around_target_x% %around_target_y%+2 %around_target_z%
    - execute at %player% run particle sweep_attack ~ ~ ~ 6 1 6 0 50
    - DELAYTICK 2
    - execute at %player% run playsound entity.player.attack.sweep ambient %player%
    - execute at %player% run particle sweep_attack ~ ~1 ~ 6 1 6 0 50
    - DELAYTICK 2
    - execute at %player% run playsound entity.player.attack.sweep ambient %player%
    - execute at %player% run particle sweep_attack ~ ~2 ~ 6 1 6 0 50
    - DELAYTICK 2
    - execute at %player% run playsound entity.player.attack.sweep ambient %player%
    - execute at %player% run particle sweep_attack ~ ~3 ~ 6 1 6 0 50
    - DELAYTICK 2
    - execute at %player% run playsound entity.player.attack.sweep ambient %player%
    - AROUND 6 false DAMAGE 6
    - MOB_AROUND 6 true DAMAGE 6
    - execute at %player% run particle sweep_attack ~ ~4 ~ 6 1 6 0 50
    - DELAYTICK 2
    - execute at %player% run playsound entity.player.attack.sweep ambient %player%
    - execute at %player% run particle sweep_attack ~ ~5 ~ 6 1 6 0 50
    - DELAYTICK 2
    - execute at %player% run playsound entity.player.attack.sweep ambient %player%
    - execute at %player% run particle sweep_attack ~ ~6 ~ 6 1 6 0 50
    playerConditions: {}
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions: {}
    variablesModification: {}
  activator4:
    name: '&eActivator'
    option: PLAYER_RIGHT_CLICK
    typeTarget: NO_TYPE_TARGET
    usageModification: 0
    cancelEvent: false
    silenceOutput: true
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 2
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems: {}
    requiredExecutableItems: {}
    detailedSlots:
    - -1
    commands:
    - execute at %player% run playsound entity.player.attack.sweep ambient %player%
    - execute at %player% run playsound block.piston.extend ambient %player%
    - effect give %player% levitation 2 255
    - FRONTDASH 2
    - 'LOOP START: 10'
    - execute at %player% run playsound entity.player.attack.sweep ambient %player%
    - execute at %player% run particle sweep_attack ~ ~ ~ 0.5 0.5 0.5 0 10
    - DELAYTICK 1
    - LOOP END
    - effect clear %player% levitation
    - execute at %player% run execute as %player% run teleport ~ ~ ~
    playerConditions: {}
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions: {}
    variablesModification: {}
recognitions: []
headValue: eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvOTM2Y2EyMDI3MDZjMTNkNWYwNGY1YzdmNWFiODhkMzYxYTcyNThlZTY3NWFmZmE2ZWExZDNkYWQwNzc0MDJiYiJ9fX0=
headDBID: ''
attributes: {}
config_5: true
config_update: true