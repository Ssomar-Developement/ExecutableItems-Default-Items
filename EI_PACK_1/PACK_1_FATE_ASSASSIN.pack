name: '&5Assassin'
lore:
- '&7&oItems from EI-PACKS 1 (9.99 euros)'
- '&7&oYou can purchase it on discord (Special70)'
- ''
- '&fHitting targets deal 6 damage'
- '&fand 12 damage after a short delay.'
- ''
- '&fRight-Clicking targets dashes you backwards'
- '&fLeft-Clicking targets dashes you forward'
- ''
- '&fSneak and right click charge through in a direction,'
- '&fdamaging nearby targets by 8 and once'
- '&fyour dash ends, you deal 15 damage to'
- '&fnearby targets.'
- '&f5 second cooldown'
- ''
- '&fSneak and left to charge and damage nearby'
- '&ftargets by 8 and after flying around in your'
- '&flocation, you deal a final blow to nearby'
- '&ftargets by 20 damage'
- '&f5 second cooldown'
material: PLAYER_HEAD
glow: false
disableStack: false
keepItemOnDeath: false
canBeUsedOnlyByTheOwner: false
storeItemInfo: false
unbreakable: false
usage: 0
usageLimit: -1
dropOptions:
  glowDrop: false
  glowDropColor: WHITE
  displayNameDrop: false
hiders:
  hideEnchantments: false
  hideUnbreakable: false
  hideAttributes: false
  hidePotionEffects: false
  hideUsage: false
enchantments: {}
giveFirstJoin:
  giveFirstJoin: false
  giveFirstJoinAmount: 1
  giveFirstJoinSlot: 0
restrictions:
  cancel-item-place: true
cancelEventIfNoPerm: false
cancelEventIfNotOwner: false
disabledWorlds: []
variables: {}
activators:
  activator1:
    name: '&eActivator'
    option: PLAYER_CLICK_ON_ENTITY
    detailedClick: LEFT
    usageModification: 0
    cancelEvent: true
    silenceOutput: true
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems: {}
    requiredExecutableItems: {}
    detailedSlots:
    - -1
    commands:
    - FRONTDASH 1.5 0.2
    - 'LOOP START: 2'
    - execute at %player% run playsound entity.player.attack.sweep ambient %player%
    - execute at %player% run particle minecraft:campfire_cosy_smoke ~ ~ ~ 0.1 0.1
      0.1 0.1 10
    - DELAYTICK 5
    - LOOP END
    playerConditions: {}
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions: {}
    detailedEntities: []
    entityCommands:
    - DAMAGE 6
    - DELAY 1
    - execute at %entity_uuid% run particle sweep_attack ~ ~ ~ 1 1 1 1 10
    - execute at %player% run playsound entity.player.attack.sweep ambient %player%
    - DAMAGE 12
    entityConditions:
      ifIsOnTheBlock: {}
      ifIsNotOnTheBlock: {}
      ifNotEntityType: []
    variablesModification: {}
  activasadtor1:
    name: '&eActivator'
    option: PLAYER_CLICK_ON_ENTITY
    detailedClick: RIGHT
    usageModification: 0
    cancelEvent: true
    silenceOutput: true
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems: {}
    requiredExecutableItems: {}
    detailedSlots:
    - -1
    commands:
    - JUMP 0.2
    - DELAYTICK 2
    - BACKDASH 1
    - 'LOOP START: 2'
    - execute at %player% run playsound entity.player.attack.sweep ambient %player%
    - execute at %player% run particle minecraft:campfire_cosy_smoke ~ ~ ~ 0.1 0.1
      0.1 0.1 10
    - DELAYTICK 5
    - LOOP END
    playerConditions: {}
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions: {}
    detailedEntities: []
    entityCommands:
    - DAMAGE 6
    - DELAY 1
    - execute at %entity_uuid% run particle sweep_attack ~ ~ ~ 1 1 1 1 10
    - execute at %player% run playsound entity.player.attack.sweep ambient %player%
    - DAMAGE 12
    entityConditions:
      ifIsOnTheBlock: {}
      ifIsNotOnTheBlock: {}
      ifNotEntityType: []
    variablesModification: {}
  actsivator1:
    name: '&eActivator'
    option: PLAYER_CLICK_ON_PLAYER
    detailedClick: LEFT
    usageModification: 0
    cancelEvent: true
    silenceOutput: true
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems: {}
    requiredExecutableItems: {}
    detailedSlots:
    - -1
    commands:
    - FRONTDASH 1.5 0.2
    - 'LOOP START: 2'
    - execute at %player% run playsound entity.player.attack.sweep ambient %player%
    - execute at %player% run particle minecraft:campfire_cosy_smoke ~ ~ ~ 0.1 0.1
      0.1 0.1 10
    - DELAYTICK 5
    - LOOP END
    playerConditions: {}
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions: {}
    targetCommands:
    - DAMAGE 6
    - DELAY 1
    - execute at %target% run particle sweep_attack ~ ~ ~ 1 1 1 1 10
    - execute at %player% run playsound entity.player.attack.sweep ambient %player%
    - DAMAGE 12
    targetConditions: {}
    variablesModification: {}
  activasadtor2:
    name: '&eActivator'
    option: PLAYER_CLICK_ON_ENTITY
    detailedClick: RIGHT
    usageModification: 0
    cancelEvent: true
    silenceOutput: true
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems: {}
    requiredExecutableItems: {}
    detailedSlots:
    - -1
    commands:
    - JUMP 0.2
    - DELAYTICK 2
    - BACKDASH 1
    - 'LOOP START: 2'
    - execute at %player% run playsound entity.player.attack.sweep ambient %player%
    - execute at %player% run particle minecraft:campfire_cosy_smoke ~ ~ ~ 0.1 0.1
      0.1 0.1 10
    - DELAYTICK 5
    - LOOP END
    playerConditions: {}
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions: {}
    detailedEntities: []
    entityCommands: []
    entityConditions:
      ifIsOnTheBlock: {}
      ifIsNotOnTheBlock: {}
      ifNotEntityType: []
    variablesModification: {}
  activator2:
    name: '&eActivator'
    option: PLAYER_RIGHT_CLICK
    typeTarget: NO_TYPE_TARGET
    usageModification: 0
    cancelEvent: false
    silenceOutput: false
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 5
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems: {}
    requiredExecutableItems: {}
    detailedSlots:
    - -1
    commands:
    - JUMP 0.4
    - DELAYTICK 10
    - execute at %player% run particle minecraft:campfire_cosy_smoke ~ ~ ~ 1 1 1 0.1
      20
    - effect give %player% levitation 3 255
    - BACKDASH 2
    - DELAYTICK 5
    - execute at %player% run execute as %player% run teleport %x% %y% %z%
    - DELAYTICK 2
    - FRONTDASH 3
    - 'LOOP START: 5'
    - execute at %player% run playsound entity.player.attack.sweep ambient %player%
    - execute at %player% run particle sweep_attack ~ ~ ~ 1 1 1 0 20
    - AROUND 2 false DAMAGE 8
    - MOB_AROUND 2 true DAMAGE 8
    - DELAYTICK 2
    - LOOP END
    - effect clear %player% levitation
    - execute at %player% run execute as %player% run teleport %x% %y% %z%
    - AROUND 2 false DAMAGE 15
    - MOB_AROUND 2 true DAMAGE 15
    - execute at %player% run particle sweep_attack ~ ~ ~ 2 2 2 0 50
    playerConditions:
      ifSneaking: true
      ifSneakingMsg: ''
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions: {}
    variablesModification: {}
  activator3:
    name: '&eActivator'
    option: PLAYER_LEFT_CLICK
    typeTarget: NO_TYPE_TARGET
    usageModification: 0
    cancelEvent: false
    silenceOutput: true
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 5
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems: {}
    requiredExecutableItems: {}
    detailedSlots:
    - -1
    commands:
    - execute at %player% run particle dust 1 1 1 1 ~ ~ ~ 1 0.1 1 0 300
    - DELAYTICK 10
    - execute at %player% run particle dust 1 1 1 1 ~ ~ ~ 3 0.1 3 0 300
    - DELAYTICK 10
    - execute at %player% run particle dust 1 1 1 1 ~ ~ ~ 6 0.1 6 0 300
    - DELAYTICK 10
    - execute at %player% run particle sweep_attack ~ ~3 ~ 3 3 3 0 100
    - CUSTOMDASH1 %x%+2 %y%+2 %z%+2
    - AROUND 5 false DAMAGE 8
    - MOB_AROUND 5 true DAMAGE 8
    - DELAYTICK 4
    - execute at %player% run playsound entity.player.attack.sweep ambient %player%
    - execute at %player% run particle sweep_attack ~ ~3 ~ 3 3 3 0 100
    - CUSTOMDASH1 %x%+2 %y%-2 %z%-2
    - AROUND 5 false DAMAGE 8
    - MOB_AROUND 5 true DAMAGE 8
    - DELAYTICK 4
    - execute at %player% run playsound entity.player.attack.sweep ambient %player%
    - execute at %player% run particle sweep_attack ~ ~3 ~ 3 3 3 0 100
    - CUSTOMDASH1 %x%-2 %y% %z%
    - AROUND 5 false DAMAGE 8
    - MOB_AROUND 5 true DAMAGE 8
    - DELAYTICK 4
    - execute at %player% run playsound entity.player.attack.sweep ambient %player%
    - execute at %player% run particle sweep_attack ~ ~3 ~ 3 3 3 0 100
    - CUSTOMDASH1 %x%+2 %y% %z%+2
    - AROUND 5 false DAMAGE 8
    - MOB_AROUND 5 true DAMAGE 8
    - DELAYTICK 4
    - execute at %player% run playsound entity.player.attack.sweep ambient %player%
    - execute at %player% run particle sweep_attack ~ ~3 ~ 3 3 3 0 100
    - CUSTOMDASH1 %x%-2 %y%+3 %z%-2
    - AROUND 5 false DAMAGE 8
    - MOB_AROUND 5 true DAMAGE 8
    - DELAYTICK 4
    - execute at %player% run playsound entity.player.attack.sweep ambient %player%
    - execute at %player% run particle sweep_attack ~ ~3 ~ 3 3 3 0 100
    - CUSTOMDASH1 %x% %y%-3 %z%
    - AROUND 5 false DAMAGE 8
    - MOB_AROUND 5 true DAMAGE 8
    - DELAYTICK 4
    - execute at %player% run playsound entity.player.attack.sweep ambient %player%
    - execute at %player% run particle firework ~ ~ ~ 0.1 0.1 0.1 1 200
    - AROUND 5 false DAMAGE 20
    - MOB_AROUND 5 true DAMAGE 20
    playerConditions:
      ifSneaking: true
      ifSneakingMsg: ''
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions: {}
    variablesModification: {}
  activator4:
    name: '&eActivator'
    option: PLAYER_RECEIVE_HIT_BY_ENTITY
    usageModification: 0
    cancelEvent: true
    silenceOutput: false
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 7
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems: {}
    requiredExecutableItems: {}
    detailedSlots:
    - -1
    commands:
    - JUMP 0.5
    - execute at %player% run playsound entity.egg.throw ambient %player%
    - execute at %player% run particle sweep_attack %entity_x% %entity_y% %entity_z%
      1 1 1 0 10
    - execute at %player% run particle campfire_signal_smoke %entity_x% %entity_y%
      %entity_z% 1 1 1 0 10
    playerConditions: {}
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions: {}
    detailedDamageCauses: []
    detailedEntities: []
    entityCommands:
    - DAMAGE 5
    entityConditions:
      ifIsOnTheBlock: {}
      ifIsNotOnTheBlock: {}
      ifNotEntityType: []
    variablesModification: {}
recognitions: []
headValue: eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvZGQ4MTQwYTM4NDFmNzA1ZGEwMTBkMjNiODM0MjAwOWZiNjk2Zjg3YTZjYzAzMzgzNGM0NjE3YTk5MTVmMjJkOSJ9fX0=
headDBID: ''
attributes: {}
config_5: true
config_update: true