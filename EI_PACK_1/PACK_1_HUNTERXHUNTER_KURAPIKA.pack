name: '&eKurapika'
lore:
- '&7&oItems from EI-PACKS 1 (9.99 euros)'
- '&7&oYou can purchase it on discord (Special70)'
- ''
- '&fRight click to throw a chain'
- '&fthat deals 6 damage to targets'
- '&fand launches you to your target''s location'
- '&fIf the chains lands on a block, it damages'
- '&fnearby targets for 4 damage and launches'
- '&fyou to the block''s location'
- '&f1 second cooldown'
- ''
- '&fWhen taking hits, you dodge those instead'
- '&f5 second cooldown'
- ''
- '&fSprint Jumping makes you faster'
- ''
- '&fWhen hitting targets, you deal 6'
- '&fdamage and after leaping around your'
- '&ftarget, you deal 15 damage to nearby'
- '&ftargets including your current target'
material: PLAYER_HEAD
glow: false
disableStack: false
keepItemOnDeath: false
canBeUsedOnlyByTheOwner: false
storeItemInfo: false
unbreakable: false
usage: 0
usageLimit: -1
dropOptions:
  glowDrop: false
  glowDropColor: WHITE
  displayNameDrop: false
hiders:
  hideEnchantments: false
  hideUnbreakable: false
  hideAttributes: false
  hidePotionEffects: false
  hideUsage: false
enchantments: {}
giveFirstJoin:
  giveFirstJoin: false
  giveFirstJoinAmount: 1
  giveFirstJoinSlot: 0
restrictions:
  cancel-item-place: true
cancelEventIfNoPerm: false
cancelEventIfNotOwner: false
disabledWorlds: []
variables: {}
activators:
  activator1:
    name: '&eActivator'
    option: PLAYER_RIGHT_CLICK
    typeTarget: NO_TYPE_TARGET
    usageModification: 0
    cancelEvent: false
    silenceOutput: true
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 1
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems: {}
    requiredExecutableItems: {}
    detailedSlots:
    - -1
    commands:
    - LAUNCH HUNTERXHUNTER_KURAPIKA_1
    playerConditions: {}
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions: {}
    variablesModification: {}
  activator2:
    name: '&eActivator'
    option: PLAYER_CLICK_ON_ENTITY
    detailedClick: LEFT
    usageModification: 0
    cancelEvent: false
    silenceOutput: true
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems: {}
    requiredExecutableItems: {}
    detailedSlots:
    - -1
    commands:
    - CUSTOMDASH1 %entity_x%+1 %entity_y% %entity_z%
    - execute at %player% run playsound entity.egg.throw ambient %player%
    - DELAYTICK 3
    - CUSTOMDASH1 %entity_x%-2 %entity_y% %entity_z%
    - execute at %player% run playsound entity.egg.throw ambient %player%
    - DELAYTICK 3
    - CUSTOMDASH1 %entity_x%+1 %entity_y% %entity_z%-1
    - execute at %player% run playsound entity.egg.throw ambient %player%
    - DELAYTICK 3
    - CUSTOMDASH1 %entity_x% %entity_y% %entity_z%-2
    - execute at %player% run playsound entity.egg.throw ambient %player%
    - DELAYTICK 3
    - CUSTOMDASH1 %entity_x% %entity_y%+1 %entity_z%
    - execute at %player% run playsound entity.egg.throw ambient %player%
    - DELAYTICK 3
    - execute at %player% run particle explosion %entity_x% %entity_y% %entity_z%
      1 1 1 0 10
    - AROUND 4 false DAMAGE 15
    - MOB_AROUND 4 true DAMAGE 15
    playerConditions: {}
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions: {}
    detailedEntities: []
    entityCommands:
    - DAMAGE 6
    entityConditions:
      ifIsOnTheBlock: {}
      ifIsNotOnTheBlock: {}
      ifNotEntityType: []
    variablesModification: {}
  activatoar2:
    name: '&eActivator'
    option: PLAYER_CLICK_ON_PLAYER
    detailedClick: LEFT
    usageModification: 0
    cancelEvent: false
    silenceOutput: true
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems: {}
    requiredExecutableItems: {}
    detailedSlots:
    - -1
    commands:
    - CUSTOMDASH1 %entity_x%+1 %entity_y% %entity_z%
    - execute at %player% run playsound entity.egg.throw ambient %player%
    - DELAYTICK 3
    - CUSTOMDASH1 %entity_x%-2 %entity_y% %entity_z%
    - execute at %player% run playsound entity.egg.throw ambient %player%
    - DELAYTICK 3
    - CUSTOMDASH1 %entity_x%+1 %entity_y% %entity_z%-1
    - execute at %player% run playsound entity.egg.throw ambient %player%
    - DELAYTICK 3
    - CUSTOMDASH1 %entity_x% %entity_y% %entity_z%-2
    - execute at %player% run playsound entity.egg.throw ambient %player%
    - DELAYTICK 3
    - CUSTOMDASH1 %entity_x% %entity_y%+1 %entity_z%
    - execute at %player% run playsound entity.egg.throw ambient %player%
    - DELAYTICK 3
    - execute at %player% run particle explosion %target_x% %target_y% %target_z%
      1 1 1 0 10
    - AROUND 4 false DAMAGE 15
    - MOB_AROUND 4 true DAMAGE 15
    playerConditions: {}
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions: {}
    targetCommands:
    - DAMAGE 6
    targetConditions: {}
    variablesModification: {}
  activator3:
    name: '&eActivator'
    option: PROJECTILE_HIT_BLOCK
    usageModification: 0
    cancelEvent: false
    silenceOutput: true
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems: {}
    requiredExecutableItems: {}
    detailedSlots: []
    commands:
    - execute at %player% run particle explosion %block_x% %block_y% %block_z% 0.1
      0.1 0.1 4 1
    - 'LOOP START: 3'
    - CUSTOMDASH1 %block_x% %block_y% %block_z%
    - DELAYTICK 3
    - LOOP END
    playerConditions: {}
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions: {}
    mustBeAProjectileLaunchWithTheSameEI: true
    detailedBlocks:
      blocks: []
      cancelEventIfNotValid: false
      messageIfNotValid: ''
    blockCommands:
    - AROUND 4 DAMAGE 4
    - MOB_AROUND 4 DAMAGE 4
    blockConditions: {}
    variablesModification: {}
  activator4:
    name: '&eActivator'
    option: PROJECTILE_HIT_ENTITY
    usageModification: 0
    cancelEvent: false
    silenceOutput: true
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems: {}
    requiredExecutableItems: {}
    detailedSlots: []
    commands:
    - 'LOOP START: 3'
    - CUSTOMDASH1 %entity_x% %entity_y% %entity_z%
    - DELAYTICK 3
    - LOOP END
    playerConditions: {}
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions: {}
    mustBeAProjectileLaunchWithTheSameEI: true
    detailedEntities: []
    entityCommands:
    - DAMAGE 6
    entityConditions:
      ifIsOnTheBlock: {}
      ifIsNotOnTheBlock: {}
      ifNotEntityType: []
    variablesModification: {}
  activator5:
    name: '&eActivator'
    option: PROJECTILE_HIT_PLAYER
    usageModification: 0
    cancelEvent: false
    silenceOutput: true
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems: {}
    requiredExecutableItems: {}
    detailedSlots: []
    commands:
    - 'LOOP START: 3'
    - CUSTOMDASH1 %target_x% %target_y% %target_z%
    - DELAYTICK 3
    - LOOP END
    playerConditions: {}
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions: {}
    mustBeAProjectileLaunchWithTheSameEI: true
    targetCommands:
    - DAMAGE 6
    targetConditions: {}
    variablesModification: {}
  activator10:
    name: '&eActivator'
    option: PLAYER_RECEIVE_HIT_BY_ENTITY
    usageModification: 0
    cancelEvent: true
    silenceOutput: true
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 5
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems: {}
    requiredExecutableItems: {}
    detailedSlots:
    - -1
    commands:
    - execute at %player% run particle minecraft:campfire_cosy_smoke ~ ~ ~ 1 1 1 0
      20
    - BACKDASH 2
    - execute at %player% run playsound entity.egg.throw ambient %player%
    playerConditions: {}
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions: {}
    detailedDamageCauses: []
    detailedEntities: []
    entityCommands: []
    entityConditions:
      ifIsOnTheBlock: {}
      ifIsNotOnTheBlock: {}
      ifNotEntityType: []
    variablesModification: {}
  activator11:
    name: '&eActivator'
    option: PLAYER_RECEIVE_HIT_BY_PLAYER
    usageModification: 0
    cancelEvent: true
    silenceOutput: true
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 5
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems: {}
    requiredExecutableItems: {}
    detailedSlots:
    - -1
    commands:
    - execute at %player% run particle minecraft:campfire_cosy_smoke ~ ~ ~ 1 1 1 0
      20
    - BACKDASH 2
    - execute at %player% run playsound entity.egg.throw ambient %player%
    playerConditions: {}
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions: {}
    detailedDamageCauses: []
    targetCommands: []
    targetConditions: {}
    variablesModification: {}
  activator6:
    name: '&eActivator'
    option: PLAYER_JUMP
    usageModification: 0
    cancelEvent: false
    silenceOutput: true
    autoUpdateItem: false
    cooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: false
      cancelEventIfInCooldown: false
    globalCooldownOptions:
      cooldown: 0
      isCooldownInTicks: false
      cooldownMsg: '&cYou are in cooldown ! &7(&e%time_H%&6H &e%time_M%&6M &e%time_S%&6S&7)'
      displayCooldownMessage: true
      cancelEventIfInCooldown: false
    otherEICooldowns: {}
    requiredItems: {}
    requiredExecutableItems: {}
    detailedSlots:
    - -1
    commands:
    - FRONTDASH 0.6 0.2
    playerConditions:
      ifSprinting: true
      ifSprintingMsg: ''
    worldConditions: {}
    itemConditions: {}
    customConditions: {}
    placeholdersConditions: {}
    variablesModification: {}
recognitions: []
headValue: eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvYTNkYzAwYmRhMzRkYTY3ODExZGEwYzdkNDU0MTI2MjcxZDc2NDkzN2MwYWRjYzE5N2ZkNDdjOGJmMzU3MGEwNyJ9fX0=
headDBID: ''
attributes: {}
config_5: true
config_update: true